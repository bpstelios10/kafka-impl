apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: {{ .Values.namespace }}
  labels:
    app: zookeeper
spec:
  ports:
  - port: 2181
    name: client
  selector:
    app: zookeeper
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: {{ .Values.namespace }}
  labels:
    app: zookeeper
spec:
  replicas: {{ .Values.zookeeper.replicasCount }}
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: {{ .Values.zookeeper.image.repository }}
        resources:
          limits:
            memory: "300Mi"
          requests:
            memory: "300Mi"
            cpu: 0
        # readinessProbe:
        #   httpGet:
        #     path: /private/ready
        #     port: 8080
        #   initialDelaySeconds: 15
        #   timeoutSeconds: 1
        # livenessProbe:
        #   httpGet:
        #     path: /private/status
        #     port: 8080
        #   initialDelaySeconds: 30
        #   timeoutSeconds: 1
        ports:
        - containerPort: 2181
          name: http
          protocol: TCP
        env:
        - name: ZOO_MY_ID
          value: "1"
        - name: ZOO_SERVERS
          value: "server.1=0.0.0.0:2888:3888;2181"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30